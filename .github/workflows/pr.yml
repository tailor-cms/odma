name: PR checks
env:
  PLAYWRIGHT_VERSION: 1.56.0
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node, pnpm, install dependencies
        uses: ./.github/actions/setup
      - name: Run linter
        run: pnpm lint
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup script .env
        run: |
          touch ./scripts/setup/.env
          echo "DB_USERNAME=dev" >> ./scripts/setup/.env
          echo "DB_PASSWORD=dev" >> ./scripts/setup/.env
      - name: Setup app .env
        run: |
          touch .env
          echo "HOSTNAME=localhost" >> .env
          echo "PORT=3000" >> .env
          echo "REVERSE_PROXY_PORT=3000" >> .env
          echo "NODE_ENV=production" >> .env
          echo "LOG_LEVEL=debug" >> .env
          echo "CORS_ALLOWED_ORIGINS=http://localhost:3000" >> .env
          echo "DATABASE_HOST=localhost" >> .env
          echo "DATABASE_PORT=5432" >> .env
          echo "DATABASE_NAME=app" >> .env
          echo "DATABASE_USERNAME=dev" >> .env
          echo "DATABASE_PASSWORD=dev" >> .env
          echo "DATABASE_SSL=false" >> .env
          echo "DATABASE_LOGGING=false" >> .env
          echo "AUTH_SALT_ROUNDS=10" >> .env
          echo "AUTH_JWT_ISSUER=App" >> .env
          echo "AUTH_JWT_SECRET=auth-jwt-secret" >> .env
          echo "AUTH_JWT_EXPIRES_IN=7d" >> .env
          echo "AUTH_COOKIE_NAME=access_token" >> .env
          echo "MAIL_FROM_NAME=App" >> .env
          echo "MAIL_FROM_EMAIL=app@myappdomain.com" >> .env
          echo "MAIL_USER=${{ secrets.MAIL_USER }}" >> .env
          echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> .env
          echo "MAIL_HOST=sandbox.smtp.mailtrap.io" >> .env
          echo "MAIL_PORT=2525" >> .env
          echo "MAIL_SECURE=false" >> .env
      - name: Setup E2E .env
        run: |
          touch ./tests/.env
          echo "MAILTRAP_ACCOUNT_ID=${{ secrets.MAILTRAP_ACCOUNT_ID }}" >> ./tests/.env
          echo "MAILTRAP_TOKEN=${{ secrets.MAILTRAP_TOKEN }}" >> ./tests/.env
          echo "MAILTRAP_INBOX_ID=${{ secrets.MAILTRAP_INBOX_ID }}" >> ./tests/.env
          echo "MAILTRAP_INBOX_NAME=e2e" >> ./tests/.env
          echo "PERCY_TOKEN=${{ secrets.PERCY_TOKEN }}" >> ./tests/.env
      - name: Setup backend test .env
        run: |
          cp ./apps/backend/test.env.example ./apps/backend/.env.test
      - name: Install, build, seed, and start server
        uses: ./.github/actions/run
      - name: Check if platform is running
        uses: indiesdev/curl@v1.1
        with:
          url: http://localhost:3000/api/healthcheck
          method: "GET"
          accept: 200
      - name: Run integration (API) tests
        shell: bash
        run: cd ./apps/backend && pnpm test:e2e
      - name: Run functional tests
        shell: bash
        run: pnpm e2e:functional
      # Disabled until credentials for Percy are provided
      # - name: Run visual tests
      #   shell: bash
      #   run: pnpm e2e:visual
      - name: Run a11y tests
        shell: bash
        run: pnpm e2e:a11y
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: ./tests/playwright-report/
          retention-days: 1
