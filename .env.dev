# =============================================================================
# BACKEND ENVIRONMENT CONFIGURATION
# =============================================================================
# This file contains all environment variables used by the NestJS backend.
# Copy this file to .env and update the values according to your environment.
# =============================================================================

# -----------------------------------------------------------------------------
# GENERAL CONFIGURATION
# From: apps/backend/src/config/general.config.ts
# -----------------------------------------------------------------------------

# Server hostname - the address or the domain name where the backend server
# will run
HOSTNAME=localhost

# Server port - The port on which the backend server will run
# Default: 3000
PORT=3000

# Frontend dev server port for 'pnpm dev'
# Should match the app's serving port:
#   Local: matches PORT env variable
#   Production: typically 80 (HTTP) or 443 (HTTPS)
#   Behind proxy: matches reverse proxy port
REVERSE_PROXY_PORT=8080

# Node environment
# Valid values: development, production, test, staging
# Default: development
NODE_ENV=development

# Pino log level
# Valid values: trace, debug, info, warn, error, fatal
LOG_LEVEL=info

# CORS allowed origins - comma-separated list of allowed origins
# Multiple origins example: http://localhost:3000,https://app.example.com
# Default: http://localhost:3000
CORS_ALLOWED_ORIGINS=http://localhost:3000

# -----------------------------------------------------------------------------
# DATABASE CONFIGURATION
# From: apps/backend/src/config/db.config.ts
# -----------------------------------------------------------------------------

# PostgreSQL host address
# Default: localhost
DATABASE_HOST=localhost

# PostgreSQL port
# Default: 5432
DATABASE_PORT=5432

# Database name
# Default: app
DATABASE_NAME=app

# Database username
# Default: dev
DATABASE_USERNAME=dev

# Database password
# Default: dev
DATABASE_PASSWORD=dev

# Enable SSL for database connection
# Accepts: true, false, yes, no, 1, 0
# Default: false
DATABASE_SSL=false

# Enable database query logging
# Useful for debugging but can be verbose in production
# Accepts: true, false, yes, no, 1, 0
# Default: false
DATABASE_LOGGING=false

# -----------------------------------------------------------------------------
# AUTHENTICATION CONFIGURATION
# From: apps/backend/src/config/auth.config.ts
# -----------------------------------------------------------------------------

# Bcrypt salt rounds for password hashing
# Higher values are more secure but slower (10-12 recommended for production)
# Default: 10
AUTH_SALT_ROUNDS=10

# JWT issuer - identifies who issued the token
# Default: App
AUTH_JWT_ISSUER=App

# JWT secret key - MUST be changed in production
# Used to sign and verify JWT tokens
# Default: auth-jwt-secret
AUTH_JWT_SECRET=auth-jwt-secret

# JWT token expiration time
# Uses ms library format: 7d, 24h, 2h, 1m, etc.
# Default: 7d
AUTH_JWT_EXPIRES_IN=7d

# Name of the authentication cookie
# Default: access_token
AUTH_COOKIE_NAME=access_token
